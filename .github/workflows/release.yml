name: Build and Release

on:
  push:
    tags:
      - "v*" # 每次打 tag 时触发，比如 v0.1.0

permissions:
  contents: write

jobs:
  build:
    name: Build binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Prepare artifact (non-Windows)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/peeko dist/
          tar czf dist/peeko-${{ matrix.target }}.tar.gz -C dist peeko
          echo "Contents of dist:"
          ls -lh dist

      - name: Prepare artifact (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist
          Copy-Item -Path "target\${{ matrix.target}}\release\peeko.exe" -Destination dist\
          Compress-Archive -Path dist\peeko.exe -DestinationPath "dist\peeko-${{ matrix.target }}.zip" -Force
          Get-ChildItem dist


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: peeko-${{ matrix.target }}
          path: dist/
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Check built artifacts
        run: |
          echo "==> Files in workspace:"
          ls -R .
          echo "==> Files in dist:"
          ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: 
            dist/**/*.tar.gz
            dist/**/*.zip
          overwrite_files: true
          generate_release_notes: true
          
